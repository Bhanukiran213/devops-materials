We have as statice website,in GIT
We wanna Dockerise this website
Run on Docker container

Dockerfile --> Docker Image --> Containers --> app run

Git --> https://github.com/javahometech/javahome-app

-- Apache webserver to deploy website
-- apache container container apache server and your application

FROM ubuntu:16.04 // specifice ubuntu image
LABEL MAINTAINER="nagireddy" // have key value pairs
LABEL PURPOSE="Devops Training"

RUN apt-get update

RUN apt-get install apache2 -y

RUN apt-get install git -y

RUN git clone https://github.com/javahometech/javahome-app

WORKDIR /javahome-app

RUN rm -rf .git // remove unwanted things

RUN cp -Rf * /var/www/html/ - copy code to /var/www/html/

RUN rm -rf /javahome-app

EXPOSE 80 // this container accepts connections over 80

RUN apt-get remove git -y

any traffice come to your host with 8080 and its routed to 80 which is exposing in container.


Why Docker?

- portability - on your windows
- easy to deploy
- lightweight - it wont consume resources like vm
- performs well - it consume less resources.

Responsibilities:

have to understand to setup application
developers may setup in diff way.


Docker networking:
------------------

- python application one container
- redis in another container
- both run same host or diff host

- docker networking is importent for container communicate each other
   - Bridge N/w
   - overlay N/w
- Bridge N/w- Containers running on same host can communicat with bridge n/w
  dev will have single node, production will have multiple nodes. use for dev.
- overlay N/w - Containers running on diff host can communicate with overlay n/w. use for production

docker network ls
 By default, bridg, host, none is created.

custome bridge:
 - we also can create custom bridge n/w
 - Any container you run, it by default joins "default bridge" n/w.

- docker network inspect bridge // it give json o/p.
- -d - dettach mode - i want my apache keep it up and running.

docker run -itd --name container-1 alphine
docker run -itd --name container-2 alphine

docker exec -it container-1 ash - this command will take you terminal of you container.
ping ip-address of container-2
ping container-2

container will communicat with only ip.

auto-scalling taking care by swarm or kubernatees.

- if you want to have addition resources we can add in the run command.


- create custom bridge network
  docker network create --driver=bridge javahome.

- docker run -itd --name container-1 --network=javahome alphine
- docker run -itd --name container-2 --network=javahome alphine
  ping ipaddress
  ping cont2- built in dns resolve machanisam added the ip. in default bridge not have that machanisam.

- mostly use dns names

python-app
 --redis (hostname=redis)

-- create custom bridge network
   docker network create --driver=bridge javahome
-- Run Redis container
   docker run -d --name redis --network=javahome redis
-- Run python-app which talks to above redis app
   docker run -d --name pythonapp --network=java -p 8080:5000 kammanna/python-app:7

CMD ["apachectl", "-D","FOREGROUND"]  // run time instruction when you say docker run this command will execute.

docker-compose:

 - it is utility reads details about our microservices from a file(docker-compose file). and will automatically setup       Dev/Test environments on a single host.

 XML,JSON,YAML

 - XML
   - store configuration data
   - Exchanging data b/w applicaitions 2kb
- JSON
   - store configuration data
   - Exchanging data b/w application
   - JSON is lighter than XML 1kb
- YAML
   - Store configuration data

Yaml:

---   // default indication of yaml it is optional

- institute:
   name : Javahome
   location: Banglore
   courses_offered:
      - Devops
      - AWS
   students: 
      - name: Hari // it is one entry and have multiple properties
        phone: 999999
        courses_enrolled:
          - Devops
          - AWS
      - name: Kishore
        phone: 8888888


- institute:
   name : Javahome
   location: Banglore
   courses_offered:
      - Devops
      - AWS
   students: 
      - name: Hari // it is one entry and have multiple properties
        phone: 999999
        courses_enrolled:
          - Devops
          - AWS
      - name: Kishore
        phone: 8888888



---
 - Product: "mobile"
    name: Mobile
    cost: 9500
    spec: // when you have multiple specs then use - spec
      ram:2
      storage: 36GB
      camara: 
        rear: 5 pixels
        front: 12 pixels
    
    reviews:
       - description: this is nice prodcut
         start:4.5
       - description: this is bad
         starts: 1


Install docker compose on linux:

   - search docker compose download
   
  

   




















