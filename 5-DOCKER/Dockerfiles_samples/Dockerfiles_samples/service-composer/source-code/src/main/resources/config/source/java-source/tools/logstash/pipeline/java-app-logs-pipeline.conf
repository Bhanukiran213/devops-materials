input {
    # GELF input to listen to logs from Spring/Spring-boot applications
	gelf {
	    port => "${JAVA_APP_GELF_PORT:12200}"
	    add_field => {
			"[@metadata][input_type]" => "java-app-log"
		}
	}
}

filter {
	if [@metadata][input_type] == "java-app-log" {
		mutate {
            add_field => {
                "[@metadata][index_name]" => "%{tag}"
            }
		}

        multiline {
            pattern => "^(%{TIMESTAMP_ISO8601})"
            negate => true
            what => "previous"
        }

        grok {
            match => [ 
                "message", 
               "(?<timestamp>%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME})  %{LOGLEVEL:loglevel} %{NUMBER:pid} --- \[\s*(?<thread>[A-Za-z0-9-]+)\] (?<package>[A-Za-z0-9.]*)\.(?<class>[A-Za-z0-9#_]+)\s*:\s+(?<logmessage>.*)",
               "message",
               "(?<timestamp>%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME})  %{LOGLEVEL:loglevel} %{NUMBER:pid} --- \[\s*(?<thread>[A-Za-z0-9-]+)\] %{DATA:class} :\s+(?<logmessage>.*)",
               "message",
               "(?<timestamp>%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME})  %{LOGLEVEL:loglevel} %{NUMBER:pid} --- .+? :\s+(?<logmessage>.*)"
            ]
        }

        date {
            match => [ "timestamp" , "yyyy-MM-dd HH:mm:ss.SSS" ]
        }
	}
}